<?xml version="1.0"?>
<robot name="razbot2" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Include wheel macro -->
  <xacro:include filename="$(find razbot2_description)/urdf/wheel.urdf.xacro" />
  
  <!-- Include arm macro -->
  <xacro:include filename="$(find razbot2_description)/urdf/razbot2_arm/razbot2_arm.urdf.xacro"/>

  <!-- <property> tags encode important robot paremeters. It's helpful to break
  these out from the rest of the description for easy manipulation -->
  <property name="M_PI" value="3.14159"/>
  <!-- Base Size -->
  <property name="base_length" value="0.184" />
  <property name="base_width" value="0.120" />
  <property name="base_height" value="0.068" />

  <!-- Wheel Properties -->
  <xacro:property name="wheel_base" value="0.123" />
  <xacro:property name="wheel_track" value="0.146" />
  <xacro:property name="wheel_vertical_offset" value="0" />
  <xacro:property name="wheel_width" value="0.025" />
  <xacro:property name="wheel_radius" value="0.040" />

  <!-- Calculated Properties -->
  <xacro:property name="base_vertical_offset" value="${wheel_radius-wheel_vertical_offset}" />

  <!-- <material> tags are used to describe the colour of robot components -->
  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="Grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>

  <!-- Some links don't have visual properties, and exist for convenience -->
  <!-- Footprint link, always on floor -->
  <link name="base_footprint"/>

  <!-- Joints connect separate links together. Fixed joints do not move -->
  <!-- Footprint to base joint -->
  <joint name="footprint_joint" type="fixed">
    <origin xyz="0 0 ${base_vertical_offset}" rpy="0 0 0" />
    <parent link="base_footprint" />
    <child link="base_link" />
  </joint>

  <!-- Base link, represents center of mass for the robot -->
  <link name="base_link">

    <!-- <visual> tags describe how a link looks. They can contain a built-in
    shape (e.g. box, cylinder), or a complex shape (e.g. *.stl, *.dae files) -->
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://razbot2_description/meshes/razbot2_base/base.stl" />
      </geometry>
      <material name="Blue" />
    </visual>

    <!-- <collision> tags describe the collision boundaries of a link. You can use
    the same contents as the <visual> tag. Even if you use a complex shape for the
    <visual> tag, it's more efficient to use a basic bounding shape for collisions -->
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <!-- <interial> tags describe intertial properties of the link. These are relative
    to the origin of the link, so make sure the data you obtain is consistent -->
    <inertial>
      <origin xyz="0 0 0" />
      <mass value="0.857" /> <!-- mass in kg -->
      <inertia  ixx="2.17" ixy="0" ixz="0"
                iyy="3.09" iyz="0"
                izz="4.76" /> <!-- inertia around each axis pair -->
    </inertial>

  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- Xacro is an XML macro language that allows us to save effort when creating similar
  XML blocks. Here, we create four wheels from the macro contained in the urdf/wheel.urdf.xacro
  file -->
  <!-- Create wheels from macro -->
  <xacro:razbot2_wheel wheel_prefix="front_left" flip="-1">
    <origin xyz="${wheel_base/2} ${wheel_track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:razbot2_wheel>
  <xacro:razbot2_wheel wheel_prefix="front_right" flip="1">
    <origin xyz="${wheel_base/2} ${-wheel_track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:razbot2_wheel>
  <xacro:razbot2_wheel wheel_prefix="rear_left" flip="-1">
    <origin xyz="${-wheel_base/2} ${wheel_track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:razbot2_wheel>
  <xacro:razbot2_wheel wheel_prefix="rear_right" flip="1">
    <origin xyz="${-wheel_base/2} ${-wheel_track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
  </xacro:razbot2_wheel>

  <!-- Add the razbot2 arm onto the platform --> 
  <xacro:razbot2_arm arm_prefix="">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </xacro:razbot2_arm>


</robot>
